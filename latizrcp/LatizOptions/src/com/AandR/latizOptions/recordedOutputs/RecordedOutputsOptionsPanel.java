/**
 *  Copyright 2010 Latiz Technologies, LLC
 *
 *  This file is part of Latiz.
 *
 *  Latiz is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Latiz is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Latiz.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.AandR.latizOptions.recordedOutputs;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import org.openide.util.NbPreferences;

/**
 *
 * @author rstjohn
 */
public class RecordedOutputsOptionsPanel extends javax.swing.JPanel {

    private RecordedOutputsOptionsPanelController controller;

    /** Creates new form RecordedOutputsOptionsPanel */
    public RecordedOutputsOptionsPanel(RecordedOutputsOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
    }

    void load() {
        // TODO read settings and initialize GUI
        // Example:
        // someCheckBox.setSelected(Preferences.userNodeForPackage(RecordedOutputsPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(RecordedOutputsPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
        fieldDir.setText(NbPreferences.forModule(RecordedOutputsOptionsPanelController.class).get("defaultDirectory", System.getProperty("user.home")));
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(RecordedOutputsPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(RecordedOutputsPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
        NbPreferences.forModule(RecordedOutputsOptionsPanelController.class).put("defaultDirectory", fieldDir.getText());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        JLabel jLabel1 = new JLabel();
        fieldDir = new JTextField();
        JButton jButton1 = new JButton();

        jLabel1.setText("Default Output Directory");

        jButton1.setIcon(new ImageIcon(getClass().getResource("/com/AandR/latizOptions/resources/find16.png"))); // NOI18N
        jButton1.setToolTipText("Choose a default directory");
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                actionChooseDir(evt);
            }
        });

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fieldDir, GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(Alignment.CENTER)
                    .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldDir, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void actionChooseDir(ActionEvent evt) {//GEN-FIRST:event_actionChooseDir
        JFileChooser choose = new JFileChooser(System.getProperty("user.home"));
        choose.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int ans = choose.showOpenDialog(null);
        if (ans == JFileChooser.CANCEL_OPTION) {
            return;
        }
        fieldDir.setText(choose.getSelectedFile().getPath());

    }//GEN-LAST:event_actionChooseDir
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextField fieldDir;
    // End of variables declaration//GEN-END:variables
}
