/**
 *  Copyright 2010 Latiz Technologies, LLC
 *
 *  This file is part of Latiz.
 *
 *  Latiz is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Latiz is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Latiz.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.AandR.latizOptions.palette;

import java.awt.Color;
import java.awt.Component;
import java.util.prefs.Preferences;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.util.NbPreferences;

/**
 *
 * @author rstjohn
 */
public class LatizPaletteOptionsPanel extends javax.swing.JPanel {

    private final LatizPaletteOptionsPanelController controller;
    private Color lineColor;
    private JColorChooser colorChooser;

    /** Creates new form LatizPaletteOptionsPanel */
    public LatizPaletteOptionsPanel(LatizPaletteOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
    }

    void load() {
        // TODO read settings and initialize GUI
        // Example:
        // someCheckBox.setSelected(Preferences.userNodeForPackage(LatizPaletteOptionsPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(LatizPaletteOptionsPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
        Preferences pref = NbPreferences.forModule(LatizPaletteOptionsPanelController.class);
        lineSpinner.setValue(pref.getFloat("lineWidth", 2f));
        lineColor = Color.decode(pref.get("lineColor", LatizPaletteOptionsPanelController.DEFAULT_FOREGROUND));
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(LatizPaletteOptionsPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(LatizPaletteOptionsPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
        Preferences pref = NbPreferences.forModule(LatizPaletteOptionsPanelController.class);
        pref.putFloat("lineWidth", (Float) lineSpinner.getValue());
        pref.put("lineColor", "#" + Integer.toHexString(lineColor.getRGB()).substring(1));
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    private void setColor() {
        if (colorChooser == null) {
            colorChooser = new JColorChooser();
        }
        colorChooser.setColor(lineColor);

        DialogDescriptor dd = new DialogDescriptor(colorChooser, "Color Chooser");
        Object ans = DialogDisplayer.getDefault().notify(dd);
        if (ans == DialogDescriptor.CANCEL_OPTION) {
            return;
        }

        lineColor = colorChooser.getColor();
    //controller.applyChanges();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        JPanel jPanel1 = new JPanel();
        JLabel jLabel1 = new JLabel();
        lineSpinner = new JSpinner();
        JButton jButton1 = new JButton();
        JButton jButton2 = new JButton();

        jPanel1.setBorder(BorderFactory.createTitledBorder("Connector Line Properties"));

        jLabel1.setText("Line pixel width");

        lineSpinner.setModel(new SpinnerNumberModel(Float.valueOf(2.0f), Float.valueOf(0.5f), Float.valueOf(5.0f), Float.valueOf(0.25f)));

        jButton1.setText("Color");

        jButton2.setText("Defaults");

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(lineSpinner, GroupLayout.PREFERRED_SIZE, 54, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {jButton1, jButton2});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lineSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JSpinner lineSpinner;
    // End of variables declaration//GEN-END:variables
}
